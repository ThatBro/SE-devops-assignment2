# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class StudentGrades(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, subject: str=None, entered: datetime=None, grade: int=None):  # noqa: E501
        """StudentGrades - a model defined in Swagger

        :param subject: The subject of this StudentGrades.  # noqa: E501
        :type subject: str
        :param entered: The entered of this StudentGrades.  # noqa: E501
        :type entered: datetime
        :param grade: The grade of this StudentGrades.  # noqa: E501
        :type grade: int
        """
        self.swagger_types = {
            'subject': str,
            'entered': datetime,
            'grade': int
        }

        self.attribute_map = {
            'subject': 'subject',
            'entered': 'entered',
            'grade': 'grade'
        }

        self._subject = subject
        self._entered = entered
        self._grade = grade

    @classmethod
    def from_dict(cls, dikt) -> 'StudentGrades':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Student_grades of this StudentGrades.  # noqa: E501
        :rtype: StudentGrades
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subject(self) -> str:
        """Gets the subject of this StudentGrades.


        :return: The subject of this StudentGrades.
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject: str):
        """Sets the subject of this StudentGrades.


        :param subject: The subject of this StudentGrades.
        :type subject: str
        """

        self._subject = subject

    @property
    def entered(self) -> datetime:
        """Gets the entered of this StudentGrades.


        :return: The entered of this StudentGrades.
        :rtype: datetime
        """
        return self._entered

    @entered.setter
    def entered(self, entered: datetime):
        """Sets the entered of this StudentGrades.


        :param entered: The entered of this StudentGrades.
        :type entered: datetime
        """

        self._entered = entered

    @property
    def grade(self) -> int:
        """Gets the grade of this StudentGrades.


        :return: The grade of this StudentGrades.
        :rtype: int
        """
        return self._grade

    @grade.setter
    def grade(self, grade: int):
        """Sets the grade of this StudentGrades.


        :param grade: The grade of this StudentGrades.
        :type grade: int
        """
        if grade is not None and grade > 10:  # noqa: E501
            raise ValueError("Invalid value for `grade`, must be a value less than or equal to `10`")  # noqa: E501
        if grade is not None and grade < 0:  # noqa: E501
            raise ValueError("Invalid value for `grade`, must be a value greater than or equal to `0`")  # noqa: E501

        self._grade = grade
